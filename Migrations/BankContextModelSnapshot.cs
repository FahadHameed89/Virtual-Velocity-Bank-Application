// <auto-generated />
using System;
using Capstone_VV.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone_VV.Migrations
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Capstone_VV.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<float>("AccountBalance")
                        .HasColumnType("float(10)");

                    b.Property<float>("AccountInterest")
                        .HasColumnType("float(10)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int(2)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bool");

                    b.HasKey("AccountID");

                    b.HasIndex("ClientID")
                        .HasName("FK_Account_Client");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            AccountBalance = 5003.23f,
                            AccountInterest = 0f,
                            AccountType = 0,
                            ClientID = 1,
                            IsActive = true
                        },
                        new
                        {
                            AccountID = 2,
                            AccountBalance = 40000.43f,
                            AccountInterest = 0.03f,
                            AccountType = 1,
                            ClientID = 1,
                            IsActive = true
                        },
                        new
                        {
                            AccountID = 3,
                            AccountBalance = 3.75f,
                            AccountInterest = 0f,
                            AccountType = 0,
                            ClientID = 2,
                            IsActive = true
                        },
                        new
                        {
                            AccountID = 4,
                            AccountBalance = 75552.23f,
                            AccountInterest = 0f,
                            AccountType = 0,
                            ClientID = 3,
                            IsActive = true
                        },
                        new
                        {
                            AccountID = 5,
                            AccountBalance = 814751f,
                            AccountInterest = 0.03f,
                            AccountType = 1,
                            ClientID = 3,
                            IsActive = true
                        },
                        new
                        {
                            AccountID = 6,
                            AccountBalance = 753.23f,
                            AccountInterest = 0f,
                            AccountType = 0,
                            ClientID = 4,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Capstone_VV.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint(15)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("ClientID");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ClientID = 1,
                            City = "Edmonton",
                            DateOfBirth = new DateTime(1989, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "johndoe123@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "john123",
                            PhoneNumber = 7804188874L,
                            PostalCode = "T8N3A4",
                            Province = "AB"
                        },
                        new
                        {
                            ClientID = 2,
                            City = "London",
                            DateOfBirth = new DateTime(1880, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "trevorbelmont123@gmail.com",
                            FirstName = "Trevor",
                            LastName = "Belmont",
                            Password = "draculasux",
                            PhoneNumber = 7804442121L,
                            PostalCode = "Z4A2B1",
                            Province = "ON"
                        },
                        new
                        {
                            ClientID = 3,
                            City = "Edmonton",
                            DateOfBirth = new DateTime(1999, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "richardrich@gmail.com",
                            FirstName = "Richard",
                            LastName = "Rich",
                            Password = "rich123",
                            PhoneNumber = 7771115454L,
                            PostalCode = "T8N3E1",
                            Province = "AB"
                        },
                        new
                        {
                            ClientID = 4,
                            City = "Edmonton",
                            DateOfBirth = new DateTime(1979, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "brokeasajoke@gmail.com",
                            FirstName = "Bruce",
                            LastName = "Hunter",
                            Password = "broke123",
                            PhoneNumber = 7809198888L,
                            PostalCode = "T8N6Y3",
                            Province = "AB"
                        });
                });

            modelBuilder.Entity("Capstone_VV.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<int>("AccountID")
                        .HasColumnType("int(10)");

                    b.Property<string>("TransactionCategory")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<string>("TransactionSource")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<float>("TransactionValue")
                        .HasColumnType("float(10)");

                    b.HasKey("TransactionID");

                    b.HasIndex("AccountID")
                        .HasName("FK_Transaction_Account");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Capstone_VV.Models.Account", b =>
                {
                    b.HasOne("Capstone_VV.Models.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientID")
                        .HasConstraintName("FK_Account_Client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Capstone_VV.Models.Transaction", b =>
                {
                    b.HasOne("Capstone_VV.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountID")
                        .HasConstraintName("FK_Transaction_Account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
